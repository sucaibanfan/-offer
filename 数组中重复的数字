用一个标志数组，每遍历一个标记为True，遇见重复的赋值并返回True，空间复杂度为O(n)
class Solution:
    # 这里要特别注意~找到任意重复的一个值并赋值到duplication[0]
    # 函数返回True/False
    def duplicate(self, numbers, duplication):
        # write code here
        if numbers is None or len(numbers) == 0:
            return False
        for i in numbers:
            if i < 0 or i >= len(numbers):
                return False
        flag = [False]*len(numbers)
        for i in range(len(numbers)):
            if flag[numbers[i]] == True:
                duplication[0] = numbers[i]
                return True
            flag[numbers[i]] = True
        return False
