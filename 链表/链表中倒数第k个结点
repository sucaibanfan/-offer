解法1
class Solution:
    def FindKthToTail(self, head, k):
        # write code here
        if not head or k<1:
            return None
        s = head
        a = []
        while s:
            a.append(s)
            s = s.next
        if k > len(a):
            return None
        return a[-k]
解法2：两个指针，一个先移动K步，然后同步移动，后一个指向链表尾的时候，前一个指向的是倒数第K个
class Solution:
    def FindKthToTail(self, head, k):
        # write code here
        if not head or k<1:
            return None
        left = right = head
        for i in range(k):
            if not right:
                return None
            right = right.next
        while right:
            left = left.next
            right = right.next
        return left
